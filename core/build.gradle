buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.core'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

sourceSets {
	intTest
	generated.java.srcDirs=['src/main/generated']
	main {
		java { srcDir 'src/main/java' }
		resources { srcDir 'src/main/resources' }
	}
	test {
		java { srcDir 'src/test/java' }
		resources { srcDir 'src/test/resources' }
	}
}
repositories {
	mavenCentral()
}

configurations {
	providedRuntime
	jpametamodel
}

dependencies {
	/*******************************
	 * Compile Dependencies
	 *******************************/

	compile project(':common')

	// Spring Libs
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '4.2.3.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '1.5.7.RELEASE'
	//

	compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.7.0'

	// PostgreSQL
	compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
	//

	// Lombok
	compileOnly('org.projectlombok:lombok')
	//

	compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa.modelgen.processor', version: '2.7.0'

	/*******************************
	 * Test Dependencies
	 *******************************/

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
}


task generateMetaModel(type: JavaCompile, group: 'build', description: 'metamodel generate') {

	source = sourceSets.main.java
	classpath = configurations.compile + configurations.jpametamodel
	options.compilerArgs = ["-proc:only"]
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()

	doFirst {
		logger.warn("Prepare dictionary structures  " +sourceSets.generated.java.srcDirs)
		//delete(sourceSets.generated.java.srcDirs)
		//sourceSets.generated.java.srcDirs.mkdirs()
	}
}

compileJava.dependsOn generateMetaModel
compileJava.source sourceSets.generated.java, sourceSets.main.java

task wrapper(type: Wrapper) { gradleVersion = '3.5.1' }